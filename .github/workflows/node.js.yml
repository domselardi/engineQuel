name: Node.js CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - name: Prepare Artifacts Prerequisites
      if: ${{ contains(github.event.head_commit.message, 'staging_release_test') }}
      run: |
        cd /home/runner/work/engineQuel/engineQuel
        echo "pkgx_version=$(npm pkg get version | tr -d '"')" >> $GITHUB_ENV
    - name: Create Artifact Zip File
      if: ${{ contains(github.event.head_commit.message, 'staging_release_test') }}
      run: tar -czf "/home/runner/work/engineQuel/tram_v${{ env.pkgx_version }}.tar.gz" -C /home/runner/work/engineQuel/ engineQuel
    - name: Upload artifact
      if: ${{ contains(github.event.head_commit.message, 'staging_release_test') }}
      uses: actions/upload-artifact@v4
      id: artifact-upload-step
      with:
        name: "tram_v${{ env.pkgx_version }}"
        path: "/home/runner/work/engineQuel/tram_v${{ env.pkgx_version }}.tar.gz"
        compression-level: 0
    - name: Output artifact ID
      if: ${{ contains(github.event.head_commit.message, 'staging_release_test') }}
      run:  echo 'Artifact ID is ${{ steps.artifact-upload-step.outputs.artifact-id }}'
    
